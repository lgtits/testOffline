import{ab as l,a as i}from"./index.125062c9.js";const a=window.location.origin,m=async()=>{const s=await l.get(`${a}/dummyData/system/systemDeviceListSample.json`);return localStorage.getItem("localDevices")||localStorage.setItem("localDevices",JSON.stringify(s)),JSON.parse(localStorage.getItem("localDevices")||"")},p=async s=>{const e=JSON.parse(localStorage.getItem("localDevices")||""),t={deviceName:s.deviceName,deviceId:`v${new Date().getTime()}`,systemCount:0,componentCount:0,systems:[]};e.result.devices.push(t),localStorage.setItem("localDevices",JSON.stringify(e))},v=async(s,e)=>{const t=JSON.parse(localStorage.getItem("localDevices")||""),o=e;t.result.devices.map(n=>n.deviceId===s);const c=t.result.devices.map(n=>n.deviceId===s?o:n);t.result.devices=c,localStorage.setItem("localDevices",JSON.stringify(t))},u=async s=>{const t=JSON.parse(localStorage.getItem("localDevices")||"").result.devices.find(c=>c.deviceId===s);return{error:0,message:null,result:{data:{...t}},success:!0}},y=async s=>{const e=JSON.parse(localStorage.getItem("localDevices")||"");e.result.devices=e.result.devices.filter(t=>t.deviceId!==s),localStorage.setItem("localDevices",JSON.stringify(e))},d=async(s,e)=>await l.post(`/systems/component/${s}`,e),g=async s=>{let e=JSON.parse(localStorage.getItem("localDevices")||"").result.devices;const t=e.find(c=>c.deviceId===s.deviceId);t.systemCount++,t.systems.push({components:[],reportStatus:"idle",systemId:`s${new Date().getTime()}`,systemName:s.systemName}),e=e.map(c=>c.deviceId===s.deviceId?t:c);const o={error:0,message:null,result:{devices:[...e]},success:!0};localStorage.setItem("localDevices",JSON.stringify(o))},D=async(s,e)=>{const t=JSON.parse(localStorage.getItem("localDevices")||"");let o;t.result.devices.forEach(c=>{if(o=c.systems.find(n=>n.systemId===s),o){c.systems=c.systems.filter(r=>r.systemId!==s),c.systemCount-=1,c.componentCount-=o.components.length;const n=t.result.devices.find(r=>r.deviceId===e.deviceId);n.systems.push(o),n.systemCount+=1,n.componentCount+=o.components.length}}),localStorage.setItem("localDevices",JSON.stringify(t))},S=async(s,e)=>(console.log("get reports: ",s,e),s==="device"?await l.get(`${a}/dummyData/system/systemDeviceReportSample.json`):await l.get(`${a}/dummyData/system/systemComponentReportSample.json`)),f=async(s,e)=>await l.post(`/bom_reports/${s}/${e}`),I=async s=>{const e=new FormData;O(e,s);const t=i.BUILD_OFFLINE_GOOGLE_FORM_URL_STAGING;return await l.post(t,e)},O=(s,e)=>{if(typeof e=="object"&&e!==null&&!Array.isArray(e)){for(const t in e)if(Object.prototype.hasOwnProperty.call(e,t)){const o=e[t];o==null||o==="undefined"?s.append(t,""):typeof o=="object"&&o instanceof Blob?s.append(t,o):s.append(t,String(o))}}else console.warn("Data is not an object:",e)};var w={getDevices:m,getDevice:u,postDevice:p,patchDevice:v,deleteDevice:y,postComponents:d,getReports:S,postReports:f,postSystems:g,moveSystems:D,requestReport:I};export{w as default,y as deleteDevice,u as getDevice,m as getDevices,S as getReports,D as moveSystems,v as patchDevice,d as postComponents,p as postDevice,f as postReports,g as postSystems,I as requestReport};
